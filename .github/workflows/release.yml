name: Release

on:
  push:
    branches: [ master, beta, integrated, beta-integrated ]

jobs:
  build:
    name: Build & Release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@master
        with:
          dotnet-version: 3.1.x
          source-url: https://nuget.pkg.github.com/BUTR/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          DOTNET_NOLOGO: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - name: Build BannerlordCheats
        run: dotnet build BannerlordCheats.csproj  --configuration Release -p:GameFolder="$PWD\game"
        env:
          DOTNET_NOLOGO: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - name: Get Versions
        id: versions
        run: |
          $ModVersion = Get-Content .\Directory.Build.props | Select-String -Pattern "<Version>([\d.]+)<\/Version>" | % { $($_.Matches.Groups[1]).Value }
          $ModVersion = $ModVersion.TrimEnd(".0")
          If ($ModVersion -notmatch "\.") { $ModVersion = "$ModVersion.0" }
          Write-Host "::set-output name=mod_version::$ModVersion"
          Write-Host "ModVersion: ""$ModVersion"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $GameVersion = Get-Content .\Directory.Build.props | Select-String -Pattern "<GameVersion>([\d.]+)<\/GameVersion>" | % { $($_.Matches.Groups[1]).Value }
          Write-Host "::set-output name=game_version::$GameVersion"
          Write-Host "GameVersion: ""$GameVersion"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $GameBranch = Get-Content .\Directory.Build.props | Select-String -Pattern "<GameBranch>(.+)<\/GameBranch>" | % { $($_.Matches.Groups[1]).Value }
          Write-Host "::set-output name=game_branch::$GameBranch"
          Write-Host "GameBranch: ""$GameBranch"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $AdditionalInfo = Get-Content .\Directory.Build.props | Select-String -Pattern "<AdditionalInfo>(.*)<\/AdditionalInfo>" | % { $($_.Matches.Groups[1]).Value }
          $AdditionalInfoEscaped = $AdditionalInfo -replace " ", "_"
          If ($AdditionalInfoEscaped) { $AdditionalInfoEscaped = "_$AdditionalInfoEscaped" }
          If ($AdditionalInfo) { $AdditionalInfo = " ($AdditionalInfo)" }
          Write-Host "::set-output name=additional_info_escaped::$AdditionalInfoEscaped"
          Write-Host "AdditionalInfoEscaped: ""$AdditionalInfoEscaped"""
          Write-Host "::set-output name=additional_info::$AdditionalInfo"
          Write-Host "AdditionalInfo: ""$AdditionalInfo"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $RepoBranch = "${{github.ref}}"
          $RepoBranch = $RepoBranch.Split("/")[-1]
          If ($RepoBranch -eq "master") { $RepoBranch = "" }
          If ($RepoBranch) { $RepoBranch = "-$RepoBranch" }
          Write-Host "::set-output name=repo_branch::$RepoBranch"
          Write-Host "RepoBranch: ""$RepoBranch"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $ZipName = "BannerlordCheats_v$($ModVersion)$($AdditionalInfoEscaped)_for_$($GameBranch)_e$($GameVersion)"
          Write-Host "::set-output name=zip_name::$ZipName"
          Write-Host "ZipName: ""$ZipName"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $TagName = "v$ModVersion$RepoBranch"
          Write-Host "::set-output name=tag_name::$TagName"
          Write-Host "TagName: ""$TagName"""
          #---------------------------------------------------------------------------------------------------------------------------------------------------------------------
          $ReleaseTitle = "Release v$($ModVersion)$($AdditionalInfo) for $($GameBranch) e$($GameVersion)"
          Write-Host "::set-output name=release_title::$ReleaseTitle"
          Write-Host "ReleaseTitle: ""$ReleaseTitle"""

      - name: Package Mod Files
        run: 7z a -tzip ${{steps.versions.outputs.zip_name}}.zip ./game/Modules/*

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{steps.versions.outputs.zip_name}}
          path: ./game/Modules/*

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{steps.versions.outputs.tag_name}}
          release_name: ${{steps.versions.outputs.release_title}}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./${{steps.versions.outputs.zip_name}}.zip
          asset_name: ${{steps.versions.outputs.zip_name}}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
